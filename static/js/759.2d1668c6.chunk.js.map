{"version":3,"file":"static/js/759.2d1668c6.chunk.js","mappings":"iKACA,OAAgB,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,aAAe,8BAA8B,iBAAmB,kCAAkC,YAAc,6BAA6B,gBAAkB,iCAAiC,cAAgB,gCCAnV,EAA6B,+BAA7B,EAAyE,+B,mBCmBzE,EAfmB,SAACA,GAChB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACI,gBAAKC,UAAWC,EAAhB,UACI,UAAC,KAAD,CAASC,GAAIJ,EAAb,WACI,gBAAKK,IAAI,iHAAiHC,IAAI,SAC9H,iBAAMJ,UAAWC,EAAjB,SACKJ,EAAMQ,aCH3B,EARoB,SAACR,GACjB,OACI,yBACKA,EAAMS,W,uCCGbC,GAAWC,E,QAAAA,GAAQ,YAiDnBC,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,qBAAjBD,EAjBL,SAACb,GACjB,OACI,iBAAMe,SAAUf,EAAMgB,aAAcb,UAAWC,EAAAA,YAA/C,UACI,iBAAKD,UAAWC,EAAAA,YAAhB,WACI,gBAAKD,UAAWC,EAAAA,gBAAhB,UACI,SAACa,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAa,gBACzBC,UAAWV,EAAUF,KAAM,iBAC3Ba,SAAU,CAACC,EAAAA,GAAeC,EAAAA,SAErC,gBAAKpB,UAAWC,EAAAA,cAAhB,UACI,+CASpB,EAjDgB,SAACJ,GAEb,IAAMwB,EAAexB,EAAMyB,YAAYC,KAAK,SAACC,GAAD,OAAO,SAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAMN,GAAIyB,EAAEzB,QAC7E0B,EAAgB5B,EAAM6B,aAAaH,KAAK,SAACI,GAAD,OAAO,SAAC,EAAD,CAAarB,QAASqB,EAAErB,aAE7E,IAAKT,EAAM+B,OACP,OAAO,SAAC,KAAD,CAAU1B,GAAG,WAOxB,OACI,iBAAKF,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,YAAhB,SACMoB,KAEN,iBAAKrB,UAAWC,EAAAA,SAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACMwB,KAEN,gBAAKzB,UAAWC,EAAAA,iBAAhB,UACI,SAACQ,EAAD,CAAkBG,SAdZ,SAACiB,GACnBhC,EAAMiC,YAAYD,EAAOE,4B,iDCGjC,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAjBoB,SAACC,GACrB,MAAO,CACHZ,YAAaY,EAAMC,eAAeb,YAClCI,aAAcQ,EAAMC,eAAeT,aACnCK,eAAgBG,EAAMC,eAAeJ,mBAIlB,SAACK,GACxB,MAAO,CACHN,YAAa,SAACC,GACVK,GAASN,EAAAA,EAAAA,GAAYC,SAO7BM,EAAAA,EAFJ,CAGCC","sources":["webpack://social-network/./src/Components/Dialogs/Dialogs.module.css?db5c","webpack://social-network/./src/Components/Dialogs/DialogItem/DialogItem.module.css?9cb2","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/MessageItem/MessageItem.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__gcTnY\",\"dialogItems\":\"Dialogs_dialogItems__fuwq6\",\"messages\":\"Dialogs_messages__IXYb-\",\"messageItems\":\"Dialogs_messageItems__7NSM9\",\"messageInputSend\":\"Dialogs_messageInputSend__FW2ab\",\"messageGrid\":\"Dialogs_messageGrid__89Jfm\",\"messageTextarea\":\"Dialogs_messageTextarea__8OubR\",\"messageButton\":\"Dialogs_messageButton__kAwK6\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogName\":\"DialogItem_dialogName__FrTAy\",\"dialogIcon\":\"DialogItem_dialogIcon__COvH6\",\"active\":\"DialogItem_active__DPALc\",\"item\":\"DialogItem_item__oX5M8\"};","import obj from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst setActive = ({isActive}) => isActive ? obj.active : obj.item;\r\n\r\nconst DialogItem = (props) => {\r\n    const path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={obj.dialogIcon}>\r\n            <NavLink to={path}>\r\n                <img src=\"https://images.pexels.com/photos/3876394/pexels-photo-3876394.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" alt=\"ava\"/>\r\n                <span className={obj.dialogName}>\r\n                    {props.name}\r\n                </span>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import obj from \"./MessageItem.module.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageItem;","import obj from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength30, requiredField} from \"../../utils/validators\";\r\nimport {Element} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const dialogsItems = props.DialogsData.map( (d) => <DialogItem name={d.name} id={d.id}/> );\r\n    const messagesItems = props.MessagesData.map( (m) => <MessageItem message={m.message}/> );\r\n\r\n    if (!props.isAuth) {\r\n        return <Navigate to=\"/login\"/>;\r\n    }\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={obj.dialogs}>\r\n            <div className={obj.dialogItems}>\r\n                { dialogsItems }\r\n            </div>\r\n            <div className={obj.messages}>\r\n                <div className={obj.messageItems}>\r\n                    { messagesItems }\r\n                </div>\r\n                <div className={obj.messageInputSend}>\r\n                    <MessageReduxForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={obj.messageForm}>\r\n            <div className={obj.messageGrid}>\r\n                <div className={obj.messageTextarea}>\r\n                    <Field type=\"text\" placeholder={\"Enter message\"}\r\n                           component={Textarea} name={\"newMessageBody\"}\r\n                           validate={[requiredField, maxLength30]}/>\r\n                </div>\r\n                <div className={obj.messageButton}>\r\n                    <button>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({form: \"dialogsAddMessage\"})(MessageForm);\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport withAuthNavigate from \"../../hoc/withAuthNavigate\";\r\nimport {compose} from \"redux\";\r\nimport {sendMessage} from \"../../Redux/dialogsReducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        DialogsData: state.dialogsReducer.DialogsData,\r\n        MessagesData: state.dialogsReducer.MessagesData,\r\n        newMessageBody: state.dialogsReducer.newMessageBody,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessage(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthNavigate)\r\n(Dialogs);\r\n"],"names":["props","path","id","className","obj","to","src","alt","name","message","Textarea","Element","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","type","placeholder","component","validate","requiredField","maxLength30","dialogsItems","DialogsData","map","d","messagesItems","MessagesData","m","isAuth","values","sendMessage","newMessageBody","compose","connect","state","dialogsReducer","dispatch","withAuthNavigate","Dialogs"],"sourceRoot":""}